services:
  cloudflared:
    container_name: cloudflared
    restart: unless-stopped
    image: visibilityspots/cloudflared
    environment:
        TZ: ${TIMEZONE}
        PORT: 5054
        ADDRESS: 0.0.0.0
    ports:
      - "5054:5054/tcp"
      - "5054:5054/udp"
    networks:
      pihole_internal:
        ipv4_address: 172.10.10.2
    security_opt:
      - no-new-privileges:true
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "500:80/tcp"
    networks:
      pihole_internal:
        ipv4_address: 172.10.10.3
      __DOCKER_NETWORK_NAME__:
    environment:
      TZ: ${TIMEZONE}
      WEBPASSWORD: ${PIHOLE_PASSWORD}
      PIHOLE_DNS_: '172.10.10.2#5054'
      DNSMASQ_LISTENING: 'all'
      VIRTUAL_HOST: pihole-local.${DOMAIN_NAME}
    volumes:
      - '/opt/appdata/pihole/config:/etc/pihole/'
      - '/opt/appdata/pihole/config/etc-dnsmasq.d/:/etc/dnsmasq.d/'
    restart: unless-stopped
    depends_on:
      - cloudflared
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.entrypoints=http"
      - "traefik.http.routers.pihole.rule=Host(`pihole-local.${DOMAIN_NAME}`) && PathPrefix(`/admin`)"
      - "traefik.http.middlewares.pihole-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.pihole.middlewares=pihole-https-redirect"
      - "traefik.http.routers.pihole-secure.entrypoints=https"
      - "traefik.http.routers.pihole-secure.rule=Host(`pihole-local.${DOMAIN_NAME}`) && PathPrefix(`/admin`)"
      - "traefik.http.routers.pihole-secure.tls=true"
      - "traefik.http.routers.pihole-secure.service=pihole"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      - "traefik.docker.network=__DOCKER_NETWORK_NAME__"

networks:
  pihole_internal:
     ipam:
       config:
         - subnet: 172.10.10.0/29
     name: pihole_internal
  __DOCKER_NETWORK_NAME__:
    external: true